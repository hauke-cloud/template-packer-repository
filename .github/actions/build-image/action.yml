name: Hetzner Image Build
description: Builds a snapshot image on the Hetzner cloud
inputs:
  template:
    description: Path to template file
    required: true
  token:
    description: Token used to access Hetzner API
    required: true
  build-identifier:
    description: Content of build label attached to every instance and ssh-key for identifying resources (for cleanup)
    required: true
  trigger-payload:
    description: Payload provided by workflow trigger
    required: false
runs:
  using: composite
  steps:
    - name: Prepare
      shell: bash
      run: |
        image_name="$(echo $GITHUB_REPOSITORY | cut -d/ -f2 | sed -E 's/packer-//g')"
        image_tag=${{ github.ref_name }}
        echo "SNAPSHOT_NAME=$image_name-$image_tag" >> $GITHUB_ENV

    - name: Setup `packer`
      uses: hashicorp/setup-packer@main
      id: setup
      with:
        version: "latest"

    - name: Run `packer init`
      id: init
      shell: bash
      run: |
        packer init ${{ inputs.template }}

    - name: Run `packer validate`
      id: validate
      shell: bash
      run: |
        echo "Processing payload..."
        payload='${{ inputs.trigger-payload }}'
        additional_vars=$(echo "$payload" | jq -r 'to_entries | map("-var \(.key)=\(.value)") | join(" ")')

        echo "Adding additional settings: ${additional_vars}"

        packer validate \
          -var hcloud_token=${{ inputs.token }} \
          -var build_identifier=${{ inputs.build-identifier }} \
          -var snapshot_name="${SNAPSHOT_NAME}" \
          $additional_vars \
          ${{ inputs.template }}

    - name: Run `packer build`
      shell: bash
      run: |
        echo "Processing payload..."
        payload='${{ inputs.trigger-payload }}'
        additional_vars=$(echo "$payload" | jq -r 'to_entries | map("-var \(.key)=\(.value)") | join(" ")')

        echo "Adding additional settings: ${additional_vars}"

        packer build \
          -color=false \
          -force \
          -on-error=cleanup \
          -var hcloud_token=${{ inputs.token }} \
          -var build_identifier=${{ inputs.build-identifier }} \
          -var github_branch=${{ github.ref_name }} \
          -var version=latest \
          -var snapshot_name="${SNAPSHOT_NAME}" \
          $additional_vars \
          ${{ inputs.template }}
