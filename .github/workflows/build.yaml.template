name: hcp-packer

on:
  schedule:
    - cron: "0 0 * * *"

  push: {}

  repository_dispatch:
    types: [trigger-workflow]

jobs:
  prepare:
    name: Prepare builds
    runs-on: ubuntu-latest

    outputs:
      templatefile: ${{ steps.templatefile.outputs.templatefile }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find template file
        id: templatefile
        run: |
          templatefile=$(find . -name "*.hcl" | head -1)
          echo "templatefile=$templatefile" >> $GITHUB_OUTPUT

  build-lab:
    name: Build images in lab
    environment: lab
    runs-on: ubuntu-latest
    needs: prepare

    if: |
      ( github.event_name == 'push' )
      || ( github.event.name == 'repository_dispatch' &&  github.event.action == 'trigger-workflow' )

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup `butane`
        shell: bash
        run: |
          if [[ ! -f /usr/local/bin/butane ]]; then
            curl -L https://github.com/coreos/butane/releases/download/v0.21.0/butane-x86_64-unknown-linux-gnu -o /usr/local/bin/butane
            chmod +x /usr/local/bin/butane
          fi

      - name: Build image
        uses: ./.github/actions/build-image
        with:
          template: ${{ needs.prepare.outputs.templatefile }}
          token: ${{ secrets.HCLOUD_TOKEN }}
          build-identifier: github-actions-${{ github.repository_id }}-${{ github.run_number }}
          trigger-payload: ${{ github.event.client_payload }}

  build-home:
    name: Build images in home (private environment)
    environment: home
    runs-on: ubuntu-latest
    needs: prepare

    if: |
      ( github.event_name == 'push' && (github.ref_name == 'dev' || github.ref_name == 'home' || github.ref_name == 'main'))
      || ( github.event.name == 'repository_dispatch' &&  github.event.action == 'trigger-workflow' )

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup `butane`
        shell: bash
        run: |
          if [[ ! -f /usr/local/bin/butane ]]; then
            curl -L https://github.com/coreos/butane/releases/download/v0.21.0/butane-x86_64-unknown-linux-gnu -o /usr/local/bin/butane
            chmod +x /usr/local/bin/butane
          fi

      - name: Build image
        uses: ./.github/actions/build-image
        with:
          template: ${{ needs.prepare.outputs.templatefile }}
          token: ${{ secrets.HCLOUD_TOKEN }}
          build-identifier: github-actions-${{ github.repository_id }}-${{ github.run_number }}
          trigger-payload: ${{ github.event.client_payload }}

  build-public:
    name: Build images in production
    environment: public
    runs-on: ubuntu-latest
    needs: prepare

    if: |
      ( github.event_name == 'push' && github.ref_name == 'main' )
      || ( github.event.name == 'repository_dispatch' &&  github.event.action == 'trigger-workflow' && github.event.client_payload.tag_name == 'main' )

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup `butane`
        shell: bash
        run: |
          if [[ ! -f /usr/local/bin/butane ]]; then
            curl -L https://github.com/coreos/butane/releases/download/v0.21.0/butane-x86_64-unknown-linux-gnu -o /usr/local/bin/butane
            chmod +x /usr/local/bin/butane
          fi

      - name: Build image
        uses: ./.github/actions/build-image
        with:
          template: ${{ needs.prepare.outputs.templatefile }}
          token: ${{ secrets.HCLOUD_TOKEN }}
          build-identifier: github-actions-${{ github.repository_id }}-${{ github.run_number }}
          trigger-payload: ${{ github.event.client_payload }}

  cleanup-lab:
    name: Clean up development resources
    environment: lab
    runs-on: ubuntu-latest

    needs: build-lab
    if: failure()

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean up resources after error
        uses: ./.github/actions/cleanup
        with:
          token: ${{ secrets.HCLOUD_TOKEN }}
          build-identifier: github-actions-${{ github.repository_id }}-${{ github.run_number }}

  cleanup-home:
    name: Clean up home resources
    environment: home
    runs-on: ubuntu-latest

    needs: build-home
    if: failure()

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean up resources after error
        uses: ./.github/actions/cleanup
        with:
          token: ${{ secrets.HCLOUD_TOKEN }}
          build-identifier: github-actions-${{ github.repository_id }}-${{ github.run_number }}

  cleanup-public:
    name: Clean up production resources
    environment: public
    runs-on: ubuntu-latest

    needs: build-public
    if: failure()

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean up resources after error
        uses: ./.github/actions/cleanup
        with:
          token: ${{ secrets.HCLOUD_TOKEN }}
          build-identifier: github-actions-${{ github.repository_id }}-${{ github.run_number }}

  cleanup-images-public:
    name: Clean up tangling images in production
    environment: public
    runs-on: ubuntu-latest

    if: github.event.schedule == '0 0 * * 0'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean up tangling images
        uses: ./.github/actions/cleanup-images
        with:
          token: ${{ secrets.HCLOUD_TOKEN }}

  cleanup-images-dev:
    name: Clean up tangling images in development
    environment: lab
    runs-on: ubuntu-latest

    if: github.event.schedule == '0 0 * * 0'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean up tangling images
        uses: ./.github/actions/cleanup-images
        with:
          token: ${{ secrets.HCLOUD_TOKEN }}

  cleanup-images-home:
    name: Clean up tangling images in home environment
    environment: home
    runs-on: ubuntu-latest

    if: github.event.schedule == '0 0 * * 0'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean up tangling images
        uses: ./.github/actions/cleanup-images
        with:
          token: ${{ secrets.HCLOUD_TOKEN }}
